#pragma checksum "D:\ProjectPRN\Nghien_Nhua\Views\Admin\AddStaff.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "007a4c468f6712883c53c9667f89826891d033e9bcd9ebc5e64ffb34a2b0191d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_AddStaff), @"mvc.1.0.view", @"/Views/Admin/AddStaff.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ProjectPRN\Nghien_Nhua\Views\_ViewImports.cshtml"
using Nghien_Nhua;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ProjectPRN\Nghien_Nhua\Views\_ViewImports.cshtml"
using Nghien_Nhua.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"007a4c468f6712883c53c9667f89826891d033e9bcd9ebc5e64ffb34a2b0191d", @"/Views/Admin/AddStaff.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"82e0436fdd10ae7141b44e3979f6ca4fcc3015b977b6d488224fe828f25a5022", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Admin_AddStaff : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AddStaff", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("row my-4 g-3 needs-validation d-flex justify-content-center"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\ProjectPRN\Nghien_Nhua\Views\Admin\AddStaff.cshtml"
  
    ViewData["Title"] = "AddStaff";
    Layout = "~/Views/Shared/_LayoutStaffMana.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container-fluid bg-light"" style=""border-radius: 10px"">
    <div class=""container p-5"">
        <div>
            <h2>Create New</h2>
            <p>Staff</p>
            <hr class=""bg-danger border-1 border-top border-dark"" />
        </div>

        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "007a4c468f6712883c53c9667f89826891d033e9bcd9ebc5e64ffb34a2b0191d5535", async() => {
                WriteLiteral(@"

            <div class=""col-md-9 row my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlInput1"" class=""form-label"">Staff Email:</label>
                </div>
                <div class=""col-md-10"">
                    <input type=""text"" class=""form-control"" id=""staff_email"" name=""txtStaff_Email"">
                    <div class=""form-message text-start""></div>
                </div>
            </div>

            <div class=""col-md-9 row my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlInput1"" class=""form-label"">Mật khẩu:</label>
                </div>
                <div class=""col-md-10"">
                    <input type=""password"" class=""form-control"" id=""staff_pwd"" name=""txtStaff_Password"">
                    <div class=""form-message text-start""></div>
                </div>
            </div>

            <div class=""col-md-9 r");
                WriteLiteral(@"ow my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlInput1"" class=""form-label"">Họ và tên:</label>
                </div>
                <div class=""col-md-10"">
                    <input type=""text"" class=""form-control"" id=""staff_fullName"" name=""txtStaff_FullName"">
                    <div class=""form-message text-start""></div>
                </div>
            </div>

            <div class=""col-md-9 row my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlTextarea1"" class=""form-label"">Giới tính:</label>
                </div>
                <div class=""col-md-10"" style=""display: flex; gap: 40px; padding: 0 0 0 32px;"">
                    <input class=""form-check-input"" type=""radio"" name=""txtStaff_Gender"" value=""Nam""
                        id=""flexRadioDefault2"" checked>
                    <label class=""form-check-label"" for=""flexRadioDe");
                WriteLiteral(@"fault2"">
                        Nam
                    </label>
                    <span style=""margin-left: 10px"">
                        <input class=""form-check-input"" type=""radio"" name=""txtStaff_Gender"" value=""Nữ""
                            id=""flexRadioDefault2"">
                        <label class=""form-check-label"" for=""flexRadioDefault2"">
                            Nữ
                        </label>
                    </span>
                    <div class=""form-message text-start""></div>
                </div>
            </div>

            <div class=""col-md-9 row my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlInput1"" class=""form-label"">Số điện thoại:</label>
                </div>
                <div class=""col-md-10"">
                    <input type=""text"" class=""form-control"" id=""staff_phone"" name=""txtStaff_Phone"">
                    <div class=""form-message text-start""></div>
        ");
                WriteLiteral(@"        </div>
            </div>

            <div class=""col-md-9 row my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlInput1"" class=""form-label"">Địa chỉ:</label>
                </div>
                <div class=""col-md-10"">
                    <input type=""text"" class=""form-control"" id=""staff_address"" name=""txtStaff_Address"">
                    <div class=""form-message text-start""></div>
                </div>
            </div>

            <div class=""col-md-9 row my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlTextarea1"" class=""form-label"">Ngày Sinh:</label>
                </div>
                <div class=""col-md-10"">
                    <input type=""date"" class=""form-control"" id=""staff_birthday"" name=""txtStaff_Birthday"">
                    <div class=""form-message text-start""></div>
                </div>
            </div");
                WriteLiteral(@">



            <div class=""col-md-9 row my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlInput1"" class=""form-label"">Số CCCD:</label>
                </div>
                <div class=""col-md-10"">
                    <input type=""text"" class=""form-control"" id=""staff_citizenIdentityNumber""
                        name=""txtStaff_CitizenIdentityNumber"">
                    <div class=""form-message text-start""></div>
                </div>
            </div>

            <div class=""col-md-9 row my-2 d-flex justify-content-between"">
                <div class=""col-auto"">
                    <label for=""exampleFormControlInput1"" class=""form-label"">Lương:</label>
                </div>
                <div class=""col-md-10"">
                    <input type=""text"" class=""form-control"" id=""staff_salary"" name=""txtStaff_Salary"">
                    <div class=""form-message text-start""></div>
                </div>
    ");
                WriteLiteral(@"        </div>

            <div id=""fields"" class=""row  d-flex justify-content-center""></div>
            <div class=""col-12 my-2 d-flex justify-content-center gap-2"">
                <input type=""submit"" value=""Create"" name=""btnAddNewStaff"" class=""btn btn-primary"" />
                <a href=""/AdminController/ListStaff"">
                    <button type=""button"" class=""btn btn-danger"" name=""btnBack""> Back to list</button>
                </a>
            </div>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        document.addEventListener(""DOMContentLoaded"", function () {
            const form = document.querySelector('#form');
            const staff_email = document.getElementById('staff_email');
            const staff_pwd = document.getElementById('staff_pwd');
            const staff_fullName = document.getElementById('staff_fullName');
            const staff_phone = document.getElementById('staff_phone');
            const staff_address = document.getElementById('staff_address');
            const staff_birthday = document.getElementById('staff_birthday');
            const staff_citizenIdentityNumber = document.getElementById('staff_citizenIdentityNumber');
            const staff_salary = document.getElementById('staff_salary');

            const setError = (element, message) => {
                const inputControl = element.parentElement;
                const errorDisplay = inputControl.querySelector('.form-message');
                errorDisplay.innerText = message;");
                WriteLiteral(@"
                inputControl.classList.add('error');
                inputControl.classList.remove('success');
            };
            const setSuccess = element => {
                const inputControl = element.parentElement;
                const errorDisplay = inputControl.querySelector('.form-message');
                errorDisplay.innerText = '';
                inputControl.classList.add('success');
                inputControl.classList.remove('error');
            };
            const isValidNumber = number => {
                const regex = /^[0-9]*\.?[0-9]+$/;
                return regex.test(String(number).toLowerCase());
            };
            const isValidPhoneNumber = phone => {
                const regex = /^(0|\+84)(\s|\.)?((3[2-9])|(5[689])|(7[06-9])|(8[1-689])|(9[0-46-9]))(\d)(\s|\.)?(\d{3})(\s|\.)?(\d{3})$/;
                return regex.test(String(phone).toLowerCase());
            };

            const isValidEmail = email => {
                const regex = /");
                WriteLiteral("^[a-zA-Z0-9._%+-]+");
                WriteLiteral(@"@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                return regex.test(String(email).toLowerCase());
            };
            const validateInputs = () => {
                const staff_emailValue = staff_email.value.trim();
                const staff_pwdValue = staff_pwd.value.trim();
                const staff_fullNameValue = staff_fullName.value.trim();
                const staff_phoneValue = staff_phone.value.trim();
                const staff_addressValue = staff_address.value.trim();
                const staff_birthdayValue = staff_birthday.value.trim();
                const staff_citizenIdentityNumberValue = staff_citizenIdentityNumber.value.trim();
                const staff_salaryValue = staff_salary.value.trim();
                let hasError = false;

                if (staff_emailValue === '') {
                    staff_email.classList.add('invalid');
                    staff_email.classList.remove('valid');
                    setError(staff_email, 'Email không được để trốn");
                WriteLiteral(@"g');
                    hasError = true;
                } else if (!isValidEmail(staff_emailValue)) {
                    staff_email.classList.add('invalid');
                    staff_email.classList.remove('valid');
                    setError(staff_email, 'Email không hợp lệ ');
                    hasError = true;
                } else {
                    staff_email.classList.remove('invalid');
                    staff_email.classList.add('valid');
                    setSuccess(staff_email);
                }

                if (staff_pwdValue === '') {
                    staff_pwd.classList.add('invalid');
                    staff_pwd.classList.remove('valid');
                    setError(staff_pwd, 'Mật khẩu không được để trống');
                    hasError = true;
                } else {
                    staff_pwd.classList.remove('invalid');
                    staff_pwd.classList.add('valid');
                    setSuccess(staff_pwd);
                }

  ");
                WriteLiteral(@"              if (staff_fullNameValue === '') {
                    staff_fullName.classList.add('invalid');
                    staff_fullName.classList.remove('valid');
                    setError(staff_fullName, 'Họ và tên không được để trống');
                    hasError = true;
                } else {
                    staff_fullName.classList.remove('invalid');
                    staff_fullName.classList.add('valid');
                    setSuccess(staff_fullName);
                }

                if (staff_phoneValue === '') {
                    staff_phone.classList.add('invalid');
                    staff_phone.classList.remove('valid');
                    setError(staff_citizenIdentityNumber, 'Số điện thoại không được để trống');
                    hasError = true;
                } else if (!isValidPhoneNumber(staff_phoneValue)) {
                    staff_phone.classList.add('invalid');
                    staff_phone.classList.remove('valid');
                    s");
                WriteLiteral(@"etError(staff_phone, 'Số điện thoại không hợp lệ');
                    hasError = true;
                } else {
                    staff_phone.classList.remove('invalid');
                    staff_phone.classList.add('valid');
                    setSuccess(staff_phone);
                }

                if (staff_addressValue === '') {
                    staff_address.classList.add('invalid');
                    staff_address.classList.remove('valid');
                    setError(staff_address, 'Địa chỉ không được để trống');
                    hasError = true;
                } else {
                    staff_address.classList.remove('invalid');
                    staff_address.classList.add('valid');
                    setSuccess(staff_address);
                }

                if (staff_birthdayValue === '') {
                    staff_birthday.classList.add('invalid');
                    staff_birthday.classList.remove('valid');
                    setError(staff_birt");
                WriteLiteral(@"hday, 'Ngày sinh không được để trống');
                    hasError = true;
                } else {
                    staff_birthday.classList.remove('invalid');
                    staff_birthday.classList.add('valid');
                    setSuccess(staff_birthday);
                }

                if (staff_citizenIdentityNumberValue === '') {
                    staff_citizenIdentityNumber.classList.add('invalid');
                    staff_citizenIdentityNumber.classList.remove('valid');
                    setError(staff_citizenIdentityNumber, 'Số CCCD không được để trống');
                    hasError = true;
                } else if (!isValidNumber(staff_citizenIdentityNumberValue)) {
                    staff_citizenIdentityNumber.classList.add('invalid');
                    staff_citizenIdentityNumber.classList.remove('valid');
                    setError(staff_citizenIdentityNumber, 'Số CCCD không hợp lệ');
                    hasError = true;
                } else {
 ");
                WriteLiteral(@"                   staff_citizenIdentityNumber.classList.remove('invalid');
                    staff_citizenIdentityNumber.classList.add('valid');
                    setSuccess(staff_citizenIdentityNumber);
                }


                if (staff_salaryValue === '') {
                    staff_salary.classList.add('invalid');
                    staff_salary.classList.remove('valid');
                    setError(staff_salary, 'Lương không được để trống');
                    hasError = true;
                } else if (!isValidNumber(staff_salaryValue)) {
                    staff_salary.classList.add('invalid');
                    staff_salary.classList.remove('valid');
                    setError(staff_salary, 'Lương không hợp lệ');
                    hasError = true;
                } else {
                    staff_salary.classList.remove('invalid');
                    staff_salary.classList.add('valid');
                    setSuccess(staff_salary);
                }
   ");
                WriteLiteral(@"             return !hasError;
            }
                ;
            form.addEventListener('submit', function (e) {
                if (!validateInputs()) {
                    e.preventDefault(); // Ngăn chặn biểu mẫu gửi đi nếu có lỗi
                }
            });
        }
        );
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
